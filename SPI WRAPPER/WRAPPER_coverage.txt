Coverage Report by instance with details

=================================================================================
=== Instance: /top/WR_test_if
=== Design Unit: work.wrapper_interface_tested
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WR_test_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                           cs[2-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /top/WR_ref_if
=== Design Unit: work.wrapper_interface_ref
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         10        10         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WR_ref_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                          MISO_ref           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 

Total Node Count     =          5 
Toggled Node Count   =          5 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (10 of 10 bins)

=================================================================================
=== Instance: /top/WRAPPER_TESTED/s1
=== Design Unit: work.slave
=================================================================================

Assertion Coverage:
    Assertions                       7         7         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/WRAPPER_TESTED/s1/proc_/immed__194
                     spi_slave_tested.sv(194)           0          1
/top/WRAPPER_TESTED/s1/checking_rx_data_label
                     spi_slave_tested.sv(196)           0          1
/top/WRAPPER_TESTED/s1/checking_rx_valid_with_rx_data_label
                     spi_slave_tested.sv(197)           0          1
/top/WRAPPER_TESTED/s1/checking_tx_valid_with_rx_data_label
                     spi_slave_tested.sv(198)           0          1
/top/WRAPPER_TESTED/s1/checking_ss_n_label
                     spi_slave_tested.sv(199)           0          1
/top/WRAPPER_TESTED/s1/tx_valid_still_high_label
                     spi_slave_tested.sv(200)           0          1
/top/WRAPPER_TESTED/s1/tx_data_still_high_label
                     spi_slave_tested.sv(201)           0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        48        47         1    97.91%

================================Branch Details================================

Branch Coverage for instance /top/WRAPPER_TESTED/s1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_slave_tested.sv
------------------------------------CASE Branch------------------------------------
    22                                     28219     Count coming in to CASE
    23              1                       6428     		IDLE: if (SS_n==0)  begin 
    31              1                       4300     		CHK_CMD:  if(SS_n==1) begin
    47              1                      12454     		WRITE: 
    55              1                       3050     		READ_ADD:
    63              1                       1987     	     READ_DATA: if (SS_n==0 ) begin//kont hatet tx fl condotion
    70              1                    ***0***     	     default: ns=IDLE;
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    23                                      6428     Count coming in to IF
    23              2                       3423     		IDLE: if (SS_n==0)  begin 
    27              1                       3004     			  else if (SS_n==1)begin
                                               1     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                      4300     Count coming in to IF
    31              2                         43     		CHK_CMD:  if(SS_n==1) begin
    35              1                       2503     				else if (SS_n==0&&MOSI==0) begin//mosi her the first bit to checkk
    38              1                       1752     			     else if ( SS_n==0&&MOSI==1) begin
                                               2     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                      1752     Count coming in to IF
    39              1                        951     		       	if(read_ad_flag) begin
    42              1                        801     		       	else  begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                     12454     Count coming in to IF
    48              1                      10473     			if (SS_n==0) begin//askkkkkkk
    51              1                       1981     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                      3050     Count coming in to IF
    56              1                        405     			if(SS_n==1)begin
    59              1                       2645     			else  begin//kont hatet tx w shiltha fl condition	
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    63                                      1987     Count coming in to IF
    63              2                       1700     	     READ_DATA: if (SS_n==0 ) begin//kont hatet tx fl condotion
    66              1                        287     	              else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                     12762     Count coming in to IF
    80              1                       1033     	if (~rst_n) begin
    83              1                      11729     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    91                                     41658     Count coming in to IF
    91              1                        516     	if(!rst_n) begin
                                           41142     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    97                                     41658     Count coming in to CASE
    98              1                       3776     		IDLE: begin
    105             1                      24628           	WRITE: begin
    122             1                       4790     		READ_ADD: begin
    142             1                       5533     		READ_DATA: begin 
                                            2931     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    108                                    24628     Count coming in to IF
    108             1                       4166     		      	if(counter_rx==4'b1001||counter_rx==4'b1000&&first_time)
                                           20462     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    112                                    24628     Count coming in to IF
    112             1                       1799     			if (counter_rx==0 && first_time) begin//from serial to parralel /f insted of zero for nonvlocking edit 
    117             1                      22829     	      	else begin  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    125                                     4790     Count coming in to IF
    125             1                        873     				if(counter_rx==4'b1001||counter_rx==4'b1000&&first_time) 
                                            3917     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    129                                     4790     Count coming in to IF
    129             1                        335     			if (counter_rx==0&&first_time) begin//from serial to parralel 
    136             1                       4455     	     	else begin  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    145                                     5533     Count coming in to IF
    145             1                       3288     				if(counter_rx==4'b1001||counter_rx==4'b1000&&first_time) 
                                            2245     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    149                                     5533     Count coming in to IF
    149             1                       2421     			if (tx_valid==1) begin
    156             1                       3112     			else  begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    150                                     2421     Count coming in to IF
    150             1                       2152     			  	if(counter_tx<8) begin 
                                             269     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    159                                     3112     Count coming in to IF
    159             1                        272     				if (counter_rx==0) begin//from serial to parralel /f insted of zero for nonvlocking edit 
    163             1                       2840     	      		else begin  
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    193                                     8828     Count coming in to IF
    193             1                        254     		if(!rst_n)
                                            8574     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      19        13         6    68.42%

================================Condition Details================================

Condition Coverage for instance /top/WRAPPER_TESTED/s1 --

  File spi_slave_tested.sv
----------------Focused Condition View-------------------
Line       35 Item    1  (SS_n ~| MOSI)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  '_1' not hit             Hit '_1'
        MOSI         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                ~MOSI                         
  Row   2:    ***0***  SS_n_1                ~MOSI                         
  Row   3:          1  MOSI_0                ~SS_n                         
  Row   4:          1  MOSI_1                ~SS_n                         

----------------Focused Condition View-------------------
Line       38 Item    1  (~SS_n && MOSI)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  '_1' not hit             Hit '_1'
        MOSI         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                MOSI                          
  Row   2:    ***0***  SS_n_1                -                             
  Row   3:    ***0***  MOSI_0                ~SS_n                         
  Row   4:          1  MOSI_1                ~SS_n                         

----------------Focused Condition View-------------------
Line       108 Item    1  ((counter_rx == 9) || ((counter_rx == 8) && first_time))
Condition totals: 2 of 3 input terms covered = 66.66%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_rx == 9)         Y
  (counter_rx == 8)         Y
         first_time         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_rx == 9)_0   ~((counter_rx == 8) && first_time)
  Row   2:          1  (counter_rx == 9)_1   -                             
  Row   3:          1  (counter_rx == 8)_0   ~(counter_rx == 9)            
  Row   4:          1  (counter_rx == 8)_1   (~(counter_rx == 9) && first_time)
  Row   5:    ***0***  first_time_0          (~(counter_rx == 9) && (counter_rx == 8))
  Row   6:          1  first_time_1          (~(counter_rx == 9) && (counter_rx == 8))

----------------Focused Condition View-------------------
Line       112 Item    1  ((counter_rx == 0) && first_time)
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_rx == 0)         Y
         first_time         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_rx == 0)_0   -                             
  Row   2:          1  (counter_rx == 0)_1   first_time                    
  Row   3:          1  first_time_0          (counter_rx == 0)             
  Row   4:          1  first_time_1          (counter_rx == 0)             

----------------Focused Condition View-------------------
Line       125 Item    1  ((counter_rx == 9) || ((counter_rx == 8) && first_time))
Condition totals: 2 of 3 input terms covered = 66.66%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_rx == 9)         Y
  (counter_rx == 8)         Y
         first_time         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_rx == 9)_0   ~((counter_rx == 8) && first_time)
  Row   2:          1  (counter_rx == 9)_1   -                             
  Row   3:          1  (counter_rx == 8)_0   ~(counter_rx == 9)            
  Row   4:          1  (counter_rx == 8)_1   (~(counter_rx == 9) && first_time)
  Row   5:    ***0***  first_time_0          (~(counter_rx == 9) && (counter_rx == 8))
  Row   6:          1  first_time_1          (~(counter_rx == 9) && (counter_rx == 8))

----------------Focused Condition View-------------------
Line       129 Item    1  ((counter_rx == 0) && first_time)
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_rx == 0)         Y
         first_time         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_rx == 0)_0   -                             
  Row   2:          1  (counter_rx == 0)_1   first_time                    
  Row   3:          1  first_time_0          (counter_rx == 0)             
  Row   4:          1  first_time_1          (counter_rx == 0)             

----------------Focused Condition View-------------------
Line       145 Item    1  ((counter_rx == 9) || ((counter_rx == 8) && first_time))
Condition totals: 2 of 3 input terms covered = 66.66%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_rx == 9)         Y
  (counter_rx == 8)         Y
         first_time         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_rx == 9)_0   ~((counter_rx == 8) && first_time)
  Row   2:          1  (counter_rx == 9)_1   -                             
  Row   3:          1  (counter_rx == 8)_0   ~(counter_rx == 9)            
  Row   4:          1  (counter_rx == 8)_1   (~(counter_rx == 9) && first_time)
  Row   5:    ***0***  first_time_0          (~(counter_rx == 9) && (counter_rx == 8))
  Row   6:          1  first_time_1          (~(counter_rx == 9) && (counter_rx == 8))

----------------Focused Condition View-------------------
Line       150 Item    1  (counter_tx < 8)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (counter_tx < 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_tx < 8)_0    -                             
  Row   2:          1  (counter_tx < 8)_1    -                             

----------------Focused Condition View-------------------
Line       159 Item    1  (counter_rx == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (counter_rx == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter_rx == 0)_0   -                             
  Row   2:          1  (counter_rx == 0)_1   -                             



Directive Coverage:
    Directives                       6         6         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/WRAPPER_TESTED/s1/checking_rx_data_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(203)
                                                                              1182 Covered   
/top/WRAPPER_TESTED/s1/checking_rx_valid_with_rx_data_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(204)
                                                                              2110 Covered   
/top/WRAPPER_TESTED/s1/checking_tx_valid_with_rx_data_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(205)
                                                                              2689 Covered   
/top/WRAPPER_TESTED/s1/checking_ss_n_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(206)
                                                                              2732 Covered   
/top/WRAPPER_TESTED/s1/tx_valid_still_high_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(207)
                                                                               269 Covered   
/top/WRAPPER_TESTED/s1/tx_data_still_high_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(208)
                                                                               269 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/WRAPPER_TESTED/s1 --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  23                IDLE                   0
  31             CHK_CMD                   1
  63           READ_DATA                   4
  55            READ_ADD                   3
  47               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                4097          
                 CHK_CMD                2969          
               READ_DATA                 605          
                READ_ADD                 890          
                   WRITE                4201          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  24                   0                2969          IDLE -> CHK_CMD               
  43                   1                 304          CHK_CMD -> READ_DATA          
  40                   2                 456          CHK_CMD -> READ_ADD           
  36                   3                2128          CHK_CMD -> WRITE              
  32                   4                  81          CHK_CMD -> IDLE               
  67                   5                 304          READ_DATA -> IDLE             
  57                   6                 456          READ_ADD -> IDLE              
  52                   7                2128          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      49        48         1    97.95%

================================Statement Details================================

Statement Coverage for instance /top/WRAPPER_TESTED/s1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_slave_tested.sv
    1                                                module slave(MISO,MOSI,SS_n,clk,rst_n,rx_data,rx_valid,tx_data,tx_valid);
    2                                                
    3                                                typedef enum  {IDLE , CHK_CMD , WRITE , READ_ADD , READ_DATA} states_e;
    4                                                
    5                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    6                                                input [7:0]tx_data;
    7                                                
    8                                                output  reg MISO ,rx_valid;
    9                                                output reg [9:0] rx_data;
    10                                               
    11                                               reg read_ad_flag;//if 1 the check command will go to the read adress if Zero the heya aret l adress yeb2a hya hatkteb now
    12                                               reg [3:0] counter_tx;
    13                                               reg [3:0]counter_rx=4'b1001;
    14                                               reg [9:0] bus_rx;
    15                                               reg[1:0]MOSI_var;
    16                                               states_e cs,ns;
    17                                               //new variables 
    18                                               reg first_time;
    19                                               
    20                                               //next state logic
    21              1                      28219     always @(*) begin //ask sensityvityy listttttt????????? //edit incomplete sensitivity list.
    22                                               	case(cs)
    23                                               		IDLE: if (SS_n==0)  begin 
    24              1                       3423     		        ns=CHK_CMD;
    25                                               			  end 
    26                                               
    27                                               			  else if (SS_n==1)begin
    28              1                       3004     			     ns=IDLE;
    29                                               			  end
    30                                               
    31                                               		CHK_CMD:  if(SS_n==1) begin
    32              1                         43     					ns=IDLE;
    33                                               
    34                                               				end
    35                                               				else if (SS_n==0&&MOSI==0) begin//mosi her the first bit to checkk
    36              1                       2503     				     ns =WRITE;
    37                                               			     end
    38                                               			     else if ( SS_n==0&&MOSI==1) begin
    39                                               		       	if(read_ad_flag) begin
    40              1                        951     		       	    	ns=READ_ADD;
    41                                               		       	end 
    42                                               		       	else  begin
    43              1                        801     		       	    	ns=READ_DATA;
    44                                               		       	end
    45                                               			       end
    46                                               
    47                                               		WRITE: 
    48                                               			if (SS_n==0) begin//askkkkkkk
    49              1                      10473     		          ns=WRITE;
    50                                               			end
    51                                               			else begin
    52              1                       1981     			     ns=IDLE;
    53                                               		     end
    54                                               
    55                                               		READ_ADD:
    56                                               			if(SS_n==1)begin
    57              1                        405     				ns=IDLE;
    58                                               			end
    59                                               			else  begin//kont hatet tx w shiltha fl condition	
    60              1                       2645     				ns=READ_ADD; 	       	   
    61                                               		     end
    62                                               
    63                                               	     READ_DATA: if (SS_n==0 ) begin//kont hatet tx fl condotion
    64              1                       1700     	    	        ns=READ_DATA;
    65                                               	               end
    66                                               	              else begin
    67              1                        287     	              	ns=IDLE;
    68                                               	              end
    69                                               
    70              1                    ***0***     	     default: ns=IDLE;
    71                                               
    72                                                     endcase
    73                                                end
    74                                               
    75                                               
    76                                               
    77                                               
    78                                                //state memory
    79              1                      12762      always @(posedge clk or negedge rst_n) begin
    80                                               	if (~rst_n) begin
    81              1                       1033     		cs=IDLE;
    82                                               	end
    83                                               	else begin
    84              1                      11729     		cs<=ns;
    85                                               	end
    86                                               end 
    87                                               
    88                                               
    89                                               //output logic
    90              1                      41658     always @(posedge clk or negedge rst_n) begin
    91                                               	if(!rst_n) begin
    92              1                        516     		read_ad_flag<=1;
    93              1                        516     		rx_data<=0;
    94              1                        516     		rx_valid<=0;
    95              1                        516     		MISO<=0;
    96                                               	end
    97                                               	case (cs)
    98                                               		IDLE: begin
    99              1                       3776     			 rx_data<=10'b00000_00000;//ask
    100             1                       3776     			 counter_tx<=4'b0111;
    101             1                       3776     			 counter_rx<=4'b1001;
    102             1                       3776     			 rx_valid<=0;
    103             1                       3776     			 first_time<=1;
    104                                              		end
    105                                                    	WRITE: begin
    106                                                    		//part added because of assertions
    107                                                    		`ifdef ASSERTIONS
    108                                              		      	if(counter_rx==4'b1001||counter_rx==4'b1000&&first_time)
    109             1                       4166     		      		MOSI_var[9-counter_rx]=MOSI;
    110                                              	      	`endif
    111                                              	  		////////////////////////////////////////////////////////////////////////////////////////////////////////////end of part needed for assertion.
    112                                              			if (counter_rx==0 && first_time) begin//from serial to parralel /f insted of zero for nonvlocking edit 
    113             1                       1799     	     		rx_valid<=1;
    114             1                       1799     	     		rx_data<={bus_rx,MOSI};  ///edited :: mising bit in rx_data.
    115             1                       1799     	     		first_time<=0;
    116                                              	          end
    117                                              	      	else begin  
    118             1                      22829     			   	bus_rx<= {bus_rx,MOSI}; //edited to use shift register
    119             1                      22829     			    	counter_rx<=counter_rx-1;
    120                                              		   	end
    121                                                 		end
    122                                              		READ_ADD: begin
    123                                              			//added part for assertions
    124                                              			`ifdef ASSERTIONS  
    125                                              				if(counter_rx==4'b1001||counter_rx==4'b1000&&first_time) 
    126             1                        873     					MOSI_var[9-counter_rx]=MOSI;
    127                                              			`endif 
    128                                              			//////////////////////////////////////////////end of added part 
    129                                              			if (counter_rx==0&&first_time) begin//from serial to parralel 
    130             1                        335     	     		rx_valid<=1;
    131             1                        335     	     		rx_data<={bus_rx,MOSI};  ///edited :: mising bit in rx_data.
    132                                              	     
    133             1                        335     	     		read_ad_flag<=0;
    134             1                        335     	     		first_time=0;
    135                                              	          end
    136                                              	     	else begin  
    137             1                       4455     		   		bus_rx<= {bus_rx,MOSI}; //edited to use shift register
    138             1                       4455     		    		counter_rx<=counter_rx-1;
    139                                              		   	end
    140                                              		end
    141                                              
    142                                              		READ_DATA: begin 
    143                                              			//added part for assertions 
    144                                              			`ifdef ASSERTIONS; 
    145                                              				if(counter_rx==4'b1001||counter_rx==4'b1000&&first_time) 
    146             1                       3288     					MOSI_var[9-counter_rx]=MOSI;
    147                                              			`endif 
    148                                              			///////////////////////////////////////////////////////////////////////////////// 
    149                                              			if (tx_valid==1) begin
    150                                              			  	if(counter_tx<8) begin 
    151             1                       2152     					   MISO<=tx_data[counter_tx];
    152             1                       2152     					   counter_tx<=counter_tx-1;
    153                                              				end	
    154             1                       2421     				read_ad_flag=1;//added line
    155                                              			end
    156                                              			else  begin
    157                                              			//	MISO=0;
    158                                              				//added part to make rx_data has a value 
    159                                              				if (counter_rx==0) begin//from serial to parralel /f insted of zero for nonvlocking edit 
    160             1                        272     	     		rx_data<={bus_rx,MOSI};  ///edited :: mising bit in rx_data.
    161             1                        272     	     		counter_rx<=4'b1001;
    162                                              	        		end
    163                                              	      		else begin  
    164             1                       2840     		   			bus_rx<= {bus_rx,MOSI}; //edited to use shift register
    165             1                       2840     		    			counter_rx<=counter_rx-1;
    166                                              		  		end
    167                                              			///////////////////////////////////////////////
    168                                              			end
    169                                              
    170                                              		end
    171                                                  endcase    
    172                                              end//end of always block
    173                                              `ifdef ASSERTIONS
    174                                              	property checking_rx_data;
    175                                              		@(posedge clk) disable iff(!rst_n || SS_n ) ( $fell(SS_n) ) |-> ##[12:14] (rx_data[9:8]==MOSI_var) ;   //
    176                                              	endproperty
    177                                              	property checking_rx_valid_with_rx_data;
    178                                              		@(posedge clk) disable iff(!rst_n || SS_n ) (rx_data[9:8]!=2'b11 && rx_data[7:0] != 8'b0000_0000 && cs!= IDLE && cs!=CHK_CMD  && !$stable(rx_data)) |-> rx_valid;
    179                                              	endproperty
    180                                              	property checking_tx_valid_with_rx_data;
    181                                              		@(posedge clk) disable iff(!rst_n || SS_n )(rx_data[9:8]==2'b11 ) |-> ##1 tx_valid;
    182                                              	endproperty
    183                                              	property checking_ss_n;
    184                                              		@(posedge clk)disable iff(!rst_n ) $rose(SS_n) |=> cs==IDLE;
    185                                              	endproperty
    186                                              	property tx_valid_still_high;
    187                                              		@(posedge clk)disable iff(!rst_n || SS_n)  $rose(tx_valid) |=> $stable(tx_valid)[->7]; //
    188                                              	endproperty
    189                                              	property tx_data_still_high;
    190                                              		@(posedge clk)disable iff(!rst_n || SS_n)  $rose(tx_valid) |=> $stable(tx_data)[->7]; //
    191                                              	endproperty
    192             1                       8828     	always_comb begin : proc_

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        104       104         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPER_TESTED/s1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                     MOSI_var[1-0]           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                       bus_rx[9-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                   counter_rx[3-0]           1           1                              100.00 
                                   counter_tx[3-0]           1           1                              100.00 
                                                cs               ENUM type       Value       Count 
                                                                      IDLE           4      100.00 
                                                                   CHK_CMD           5      100.00 
                                                                     WRITE           3      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                        first_time           1           1                              100.00 
                                                ns               ENUM type       Value       Count 
                                                                      IDLE           4      100.00 
                                                                   CHK_CMD           5      100.00 
                                                                     WRITE           4      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                      read_ad_flag           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         57 
Toggled Node Count   =         57 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (104 of 104 bins)

=================================================================================
=== Instance: /top/WRAPPER_TESTED/R1
=== Design Unit: work.Dual_port_RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        15        13         2    86.66%

================================Branch Details================================

Branch Coverage for instance /top/WRAPPER_TESTED/R1

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Dual_port_RAM.v
------------------------------------IF Branch------------------------------------
    14                                      8196     Count coming in to IF
    14              1                        508     	if (!rst_n) begin
    20              1                       7688     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    24                                      7688     Count coming in to IF
    24              1                       4237         if(rx_valid==1)begin
                                            3451     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    25                                      4237     Count coming in to IF
    25              1                       3642             if(din[9]==0)begin
                                             595     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    27                                      3642     Count coming in to IF
    27              1                       1911                   if(din[8]==0)begin
    31              1                       1731                    else if( din[8]==1)begin
                                         ***0***     All False Count
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    36                                      4237     Count coming in to IF
    36              1                        595             if(din[9]==1)begin
                                            3642     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    37                                       595     Count coming in to IF
    37              1                        595                 if (din[8]==0) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    44                                      7688     Count coming in to IF
    44              1                        541         if(din[9:8]==2'b11)begin
    50              1                       7147         else 
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         1         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/WRAPPER_TESTED/R1 --

  File Dual_port_RAM.v
----------------Focused Condition View-------------------
Line       44 Item    1  (din[9:8] == 3)
Condition totals: 1 of 1 input term covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (din[9:8] == 3)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (din[9:8] == 3)_0     -                             
  Row   2:          1  (din[9:8] == 3)_1     -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        14         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/WRAPPER_TESTED/R1 --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Dual_port_RAM.v
    1                                                module Dual_port_RAM(clk,rst_n,rx_valid,din,dout,tx_valid);
    2                                                parameter MEM_DEPTH=256;
    3                                                parameter ADDR_SIZE=8;
    4                                                input [9:0]din;
    5                                                input clk,rst_n,rx_valid;
    6                                                output reg tx_valid;
    7                                                
    8                                                output reg [7:0]dout;
    9                                                
    10                                               reg [ADDR_SIZE-1:0] mem [MEM_DEPTH-1:0];
    11                                               //reg[ADDR_SIZE-1:0] temp_adr;
    12                                               reg[ADDR_SIZE-1:0] wr_ptr,rd_ptr ; ///added 
    13              1                       8196     always @(posedge clk or negedge rst_n) begin
    14                                               	if (!rst_n) begin
    15              1                        508     		dout<=8'b0000_0000;
    16              1                        508     		tx_valid<=0;
    17              1                        508     		wr_ptr<=0;
    18              1                        508     		rd_ptr<=0;
    19                                               	end
    20                                               	else begin
    21                                               		
    22                                               	
    23                                               
    24                                                   if(rx_valid==1)begin
    25                                                       if(din[9]==0)begin
    26                                               
    27                                                             if(din[8]==0)begin
    28              1                       1911                   		 wr_ptr<=din[7:0];//keda ha write address fel memory
    29              1                       1911                   		 tx_valid<=0;
    30                                                              end
    31                                                              else if( din[8]==1)begin
    32              1                       1731                        mem[wr_ptr]<=din[7:0];// hna hy write data fel address
    33              1                       1731                        tx_valid<=0;
    34                                                               end
    35                                                       end
    36                                                       if(din[9]==1)begin
    37                                                           if (din[8]==0) begin
    38              1                        595                       rd_ptr<= din[7:0];
    39              1                        595                       tx_valid<=0;
    40                                                       	end
    41                                                       end
    42                                                   end
    43                                               ///end in here and put the last possiblity alone
    44                                                   if(din[9:8]==2'b11)begin
    45              1                        541                  dout[7:0]<= mem[rd_ptr];
    46              1                        541                  tx_valid<=1;
    47                                                            
    48                                                   end
    49                                                   //added part to make tx_valid=0
    50                                                   else 
    51              1                       7147         	tx_valid<=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPER_TESTED/R1 --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                       rd_ptr[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 
                                       wr_ptr[7-0]           1           1                              100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/WRAPPER_TESTED
=== Design Unit: work.SPI_wraper_tested
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/WRAPPER_TESTED --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_wrapper_tested.sv
    1                                                module SPI_wraper_tested (wrapper_interface_tested.WR_TEST WR_test_if);
    2                                                
    3                                                logic MOSI;
    4                                                logic SS_n,clk,rst_n;
    5                                                logic MISO;
    6                                                
    7                                                /*-------------------------------------------------------
    8                                                -- ASSIGNING VARIABELS TO INTERFACE
    9                                                -------------------------------------------------------*/
    10                                               
    11              1                      12989     assign MOSI  = WR_test_if.MOSI;
    12              1                       6001     assign SS_n  = WR_test_if.SS_n;
    13              1                      85806     assign clk   = WR_test_if.clk;
    14              1                        509     assign rst_n = WR_test_if.rst_n;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPER_TESTED --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                  rx_data_din[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                 tx_data_dout[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /top/WRAPPER_REF/slave
=== Design Unit: work.spi_slave_2
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        38        38         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/WRAPPER_REF/slave

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_slave_a.sv
------------------------------------IF Branch------------------------------------
    22                                     12237     Count coming in to IF
    22              1                        508     	if (!rst_n) begin
    25              1                      11729     	else  begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    31                                     28601     Count coming in to CASE
    32              1                       6556     		IDLE : begin
    38              1                       4338     		CHK_CMD : begin
    50              1                      12601     		WRITE:begin
    57              1                       3101     		READ_ADD:begin
    64              1                       2004     		READ_DATA:begin
    70              1                          1     		default: ns=IDLE;
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    33                                      6556     Count coming in to IF
    33              1                       3587     			if(SS_n || !rst_n) 
    35              1                       2969     			else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    39                                      4338     Count coming in to IF
    39              1                         46     			if(SS_n) 
    41              1                       4292     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                      4292     Count coming in to IF
    42              1                       2528     				if(!MOSI)
    44              1                        804     				else if(addr_available)
    46              1                        960     				else 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                     12601     Count coming in to IF
    51              1                      10618     			if(!SS_n)
    53              1                       1983     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                      3101     Count coming in to IF
    58              1                       2695     			if(!SS_n )
    60              1                        406     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                      2004     Count coming in to IF
    65              1                       1714     			if( !SS_n )
    67              1                        290     			else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                     41465     Count coming in to IF
    75              1                        465     	if(!rst_n)begin
                                           41000     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    83                                     41465     Count coming in to CASE
    84              1                       3725     		IDLE:begin
    91              1                      24628     		WRITE:begin
    107             1                       4790     		READ_ADD:begin
    125             1                       5391     		READ_DATA:begin
                                            2931     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    92                                     24628     Count coming in to IF
    92              1                       5286     			if(counter >9 ) begin
    96              1                       1799     			else if(counter == 9 ) begin
    101             1                      17543     			else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    109                                     4790     Count coming in to IF
    109             1                        970     			if(counter > 9 ) begin
    113             1                        335     			else if(counter == 9 ) begin
    119             1                       3485     			else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    127                                     5391     Count coming in to IF
    127             1                       1883     			if(tx_valid&& counter_2<7) begin
    132             1                        396     			else if(tx_valid)
    134             1                        272     			else if(counter == 9 ) begin
    139             1                       2840     			else begin
Branch totals: 4 hits of 4 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         9         0   100.00%

================================Condition Details================================

Condition Coverage for instance /top/WRAPPER_REF/slave --

  File spi_slave_a.sv
----------------Focused Condition View-------------------
Line       33 Item    1  (SS_n || ~rst_n)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         Y
       rst_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                rst_n                         
  Row   2:          1  SS_n_1                -                             
  Row   3:          1  rst_n_0               ~SS_n                         
  Row   4:          1  rst_n_1               ~SS_n                         

----------------Focused Condition View-------------------
Line       92 Item    1  (counter > 9)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 9)_0       -                             
  Row   2:          1  (counter > 9)_1       -                             

----------------Focused Condition View-------------------
Line       96 Item    1  (counter == 9)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (counter == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter == 9)_0      -                             
  Row   2:          1  (counter == 9)_1      -                             

----------------Focused Condition View-------------------
Line       109 Item    1  (counter > 9)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 9)_0       -                             
  Row   2:          1  (counter > 9)_1       -                             

----------------Focused Condition View-------------------
Line       113 Item    1  (counter == 9)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (counter == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter == 9)_0      -                             
  Row   2:          1  (counter == 9)_1      -                             

----------------Focused Condition View-------------------
Line       127 Item    1  (tx_valid && (counter_2 < 7))
Condition totals: 2 of 2 input terms covered = 100.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
         tx_valid         Y
  (counter_2 < 7)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  tx_valid_0            -                             
  Row   2:          1  tx_valid_1            (counter_2 < 7)               
  Row   3:          1  (counter_2 < 7)_0     tx_valid                      
  Row   4:          1  (counter_2 < 7)_1     tx_valid                      

----------------Focused Condition View-------------------
Line       134 Item    1  (counter == 9)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (counter == 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter == 9)_0      -                             
  Row   2:          1  (counter == 9)_1      -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top/WRAPPER_REF/slave --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  32                IDLE                   0
  38             CHK_CMD                   1
  57            READ_ADD                   3
  64           READ_DATA                   2
  50               WRITE                   4
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                3572          
                 CHK_CMD                2969          
                READ_ADD                 890          
               READ_DATA                 605          
                   WRITE                4201          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  36                   0                2969          IDLE -> CHK_CMD               
  47                   1                 456          CHK_CMD -> READ_ADD           
  45                   2                 304          CHK_CMD -> READ_DATA          
  43                   3                2128          CHK_CMD -> WRITE              
  40                   4                  81          CHK_CMD -> IDLE               
  61                   5                 456          READ_ADD -> IDLE              
  68                   6                 304          READ_DATA -> IDLE             
  54                   7                2128          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      53        53         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/WRAPPER_REF/slave --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_slave_a.sv
    3                                                module spi_slave_2(MOSI,MISO,SS_n,clk,rst_n,rx_data,rx_valid,tx_data,tx_valid);
    4                                                input MOSI,clk,rst_n,SS_n,tx_valid;
    5                                                input [7:0] tx_data;
    6                                                output reg MISO,rx_valid;
    7                                                output reg [9:0] rx_data;
    8                                                reg [9:0] bus;
    9                                                parameter IDLE=3'b000;
    10                                               parameter CHK_CMD=3'b001;
    11                                               parameter READ_DATA=3'b010;
    12                                               parameter READ_ADD=3'b011;
    13                                               parameter WRITE=3'b100;
    14                                               (* fsm_encoding = "gray" *)
    15                                               logic [2:0] cs,ns;
    16                                               reg addr_available;
    17                                               reg [3:0] counter;
    18                                               reg [4:0]counter_2;
    19                                               
    20                                               // state memory logic 
    21              1                      12237     always @(posedge clk or negedge rst_n) begin
    22                                               	if (!rst_n) begin
    23              1                        508     		cs<=IDLE;
    24                                               	end
    25                                               	else  begin
    26              1                      11729     		cs<=ns;
    27                                               	end
    28                                               end
    29                                               //next state logic
    30              1                      28601     always @(* ) begin
    31                                               	case(cs)
    32                                               		IDLE : begin
    33                                               			if(SS_n || !rst_n) 
    34              1                       3587     				ns=IDLE;
    35                                               			else 
    36              1                       2969     				ns=CHK_CMD;	
    37                                               		end
    38                                               		CHK_CMD : begin
    39                                               			if(SS_n) 
    40              1                         46     				ns=IDLE;
    41                                               			else begin
    42                                               				if(!MOSI)
    43              1                       2528     					ns=WRITE;
    44                                               				else if(addr_available)
    45              1                        804     					ns=READ_DATA;
    46                                               				else 
    47              1                        960     					ns=READ_ADD;
    48                                               			end
    49                                               		end
    50                                               		WRITE:begin
    51                                               			if(!SS_n)
    52              1                      10618     				ns=WRITE ;
    53                                               			else begin
    54              1                       1983     				ns=IDLE;	
    55                                               			end
    56                                               		end
    57                                               		READ_ADD:begin
    58                                               			if(!SS_n )
    59              1                       2695     				ns=READ_ADD ;
    60                                               			else begin
    61              1                        406     				ns=IDLE;	
    62                                               			end
    63                                               		end
    64                                               		READ_DATA:begin
    65                                               			if( !SS_n )
    66              1                       1714     				ns=READ_DATA;
    67                                               			else
    68              1                        290     				ns=IDLE;
    69                                               		end
    70              1                          1     		default: ns=IDLE;
    71                                               	endcase
    72                                               end
    73                                               //output logic 
    74              1                      41465     always @(posedge clk ) begin
    75                                               	if(!rst_n)begin
    76              1                        465     		addr_available<=0;
    77              1                        465     		rx_data<=0;
    78              1                        465     		rx_valid<=0;
    79              1                        465     		counter<=0;
    80              1                        465     		counter_2<=0;
    81              1                        465     		MISO<=0;
    82                                               	end
    83                                               	case(cs)
    84                                               		IDLE:begin
    85              1                       3725     			rx_valid<=0;
    86              1                       3725     			counter<=0;
    87              1                       3725     			rx_data<=0;
    88              1                       3725     			counter_2<=0;
    89                                               
    90                                               		end
    91                                               		WRITE:begin
    92                                               			if(counter >9 ) begin
    93              1                       5286     				rx_valid<=1;
    94              1                       5286     				counter<=counter+1;
    95                                               			end
    96                                               			else if(counter == 9 ) begin
    97              1                       1799     				rx_valid<=1;
    98              1                       1799     				rx_data<={bus,MOSI};
    99              1                       1799     				counter<=counter+1;
    100                                              			end
    101                                              			else begin
    102                                              		//		rx_valid<=0;
    103             1                      17543     				bus<={bus,MOSI};
    104             1                      17543     				counter<=counter+1;
    105                                              			end
    106                                              		end
    107                                              		READ_ADD:begin
    108                                              			
    109                                              			if(counter > 9 ) begin
    110             1                        970     				rx_valid<=1;
    111             1                        970     				counter<=counter+1;
    112                                              			end
    113                                              			else if(counter == 9 ) begin
    114             1                        335     				rx_valid<=1;
    115             1                        335     				rx_data<={bus,MOSI};
    116             1                        335     				counter<=counter+1;
    117             1                        335     				addr_available<=1;
    118                                              			end
    119                                              			else begin
    120             1                       3485     				rx_valid<=0;
    121             1                       3485     				bus<={bus,MOSI};
    122             1                       3485     				counter<=counter+1;
    123                                              			end
    124                                              		end
    125                                              		READ_DATA:begin
    126                                              		//	addr_available<=0;
    127                                              			if(tx_valid&& counter_2<7) begin
    128             1                       1883     				counter_2<=counter_2+1;
    129             1                       1883     				MISO<=tx_data[7-counter_2];
    130             1                       1883     				addr_available<=0;
    131                                              			end
    132                                              			else if(tx_valid)
    133             1                        396     				MISO<=tx_data[0];
    134                                              			else if(counter == 9 ) begin
    135                                              			//	rx_valid<=1;
    136             1                        272     				rx_data<={bus,MOSI};
    137             1                        272     				counter<=counter+1;
    138                                              			end
    139                                              			else begin
    140             1                       2840     				rx_valid<=0;
    141             1                       2840     				bus<={bus,MOSI};
    142             1                       2840     				counter<=counter+1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        102        98         4    96.07%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPER_REF/slave --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                    addr_available           1           1                              100.00 
                                          bus[9-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                      counter[3-0]           1           1                              100.00 
                                    counter_2[4-3]           0           0                                0.00 
                                    counter_2[2-0]           1           1                              100.00 
                                           cs[2-0]           1           1                              100.00 
                                           ns[2-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         51 
Toggled Node Count   =         49 
Untoggled Node Count =          2 

Toggle Coverage      =      96.07% (98 of 102 bins)

=================================================================================
=== Instance: /top/WRAPPER_REF/memory
=== Design Unit: work.ram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        13        10         3    76.92%

================================Branch Details================================

Branch Coverage for instance /top/WRAPPER_REF/memory

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram.sv
------------------------------------IF Branch------------------------------------
    11                                      8196     Count coming in to IF
    11              1                        508     	if (!rst_n) begin
    17              1                       7688     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    18                                      7688     Count coming in to CASE
    19              1                       4821     			2'b00:begin
    24              1                       1731     			2'b01:begin
    29              1                        595     			2'b10:begin
    34              1                        541     			2'b11:begin
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%

------------------------------------IF Branch------------------------------------
    20                                      4821     Count coming in to IF
    20              1                       1911     				if(rx_valid)
                                            2910     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    25                                      1731     Count coming in to IF
    25              1                       1731     				if(rx_valid)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    30                                       595     Count coming in to IF
    30              1                        595     				if(rx_valid)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        13         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/WRAPPER_REF/memory --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ram.sv
    1                                                module ram (din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                parameter MEM_DEPTH=256;
    3                                                parameter ADDR_SIZE=8;
    4                                                input clk,rst_n,rx_valid;
    5                                                input [ADDR_SIZE+1:0]din; 
    6                                                output reg [ADDR_SIZE-1:0]dout;
    7                                                output reg tx_valid;
    8                                                reg [ADDR_SIZE-1:0] mem [MEM_DEPTH-1:0];
    9                                                reg [ADDR_SIZE-1:0]wr_addr,rd_addr;
    10              1                       8196     always @(posedge clk or negedge rst_n) begin
    11                                               	if (!rst_n) begin
    12              1                        508     		dout<=0;
    13              1                        508     		tx_valid<=0;
    14              1                        508     		wr_addr<=0;
    15              1                        508     		rd_addr<=0;
    16                                               	end
    17                                               	else begin
    18                                               		case (din[ADDR_SIZE+1:8]) 
    19                                               			2'b00:begin
    20                                               				if(rx_valid)
    21              1                       1911     					wr_addr<=din[ADDR_SIZE-1:0];
    22              1                       4821     					tx_valid<=0;
    23                                               			end
    24                                               			2'b01:begin
    25                                               				if(rx_valid)
    26              1                       1731     					mem[wr_addr]<=din[ADDR_SIZE-1:0];
    27              1                       1731     					tx_valid<=0;
    28                                               			end
    29                                               			2'b10:begin
    30                                               				if(rx_valid)
    31              1                        595     					rd_addr<=din[ADDR_SIZE-1:0];
    32              1                        595     					tx_valid<=0;
    33                                               			end
    34                                               			2'b11:begin
    35              1                        541     				dout<=mem[rd_addr];
    36              1                        541     				tx_valid<=1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPER_REF/memory --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                      rd_addr[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 
                                      wr_addr[7-0]           1           1                              100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /top/WRAPPER_REF
=== Design Unit: work.spi_wrapper_ref
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/WRAPPER_REF --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File spi_wrapper.sv
    1                                                module spi_wrapper_ref(wrapper_interface_ref.WR_REF WR_ref_if);
    2                                                
    3                                                logic MOSI,clk,rst_n,SS_n;
    4                                                logic MISO;
    5                                                
    6                                                /*-------------------------------------------------------
    7                                                -- ASSIGNING VARIABELS TO INTERFACE
    8                                                -------------------------------------------------------*/
    9                                                
    10              1                      12989     assign MOSI  = WR_ref_if.MOSI;
    11              1                       6001     assign SS_n  = WR_ref_if.SS_n;
    12              1                      85806     assign clk   = WR_ref_if.clk;
    13              1                        509     assign rst_n = WR_ref_if.rst_n;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/WRAPPER_REF --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10        10         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    5                                                module top;
    6                                                bit clk;
    7                                                
    8                                                initial begin
    9               1                          1     	clk = 0;
    10              1                          1     	forever #1 clk = ~clk;
    10              2                      85805     
    10              3                      85804     
    11                                               end
    12                                               
    13                                               wrapper_interface_tested WR_test_if(clk);
    14                                               wrapper_interface_ref    WR_ref_if (clk);
    15                                               
    16                                               
    17                                               SPI_wraper_tested WRAPPER_TESTED (WR_test_if);
    18                                               spi_wrapper_ref   WRAPPER_REF    (WR_ref_if);
    19                                               
    20                                               /*----------------------------------------------------
    21                                               -- ADD SIGNALS FOR COVERAGE
    22                                               ----------------------------------------------------*/
    23              1                       4269     assign WR_test_if.rx_valid = WRAPPER_TESTED.s1.rx_valid;
    24              1                        546     assign WR_test_if.tx_valid = WRAPPER_TESTED.s1.tx_valid;
    25              1                       8827     assign WR_test_if.cs       = WRAPPER_TESTED.s1.cs;
    26                                               /*--------------------------------------------------*/
    27                                               
    28                                               initial begin
    29              1                          1     	uvm_config_db # (virtual wrapper_interface_tested) :: set(null , "uvm_test_top" , "WR_test_if" , WR_test_if);
    30              1                          1     	uvm_config_db # (virtual wrapper_interface_ref)    :: set(null , "uvm_test_top" , "WR_ref_if"  , WR_ref_if );
    31              1                          1     	run_test("Test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /seqeunce_item
=== Design Unit: work.seqeunce_item
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        29        10        19    34.48%

================================Branch Details================================

Branch Coverage for instance /seqeunce_item

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File seqeunce_item.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     		`uvm_object_utils(seqeunce_item_2)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***     		`uvm_object_utils(seqeunce_item_2)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     		`uvm_object_utils(seqeunce_item_2)
    7               4                    ***0***     		`uvm_object_utils(seqeunce_item_2)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***     		`uvm_object_utils(seqeunce_item_2)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     		`uvm_object_utils(seqeunce_item_2)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              1                    ***0***     		`uvm_object_utils(seqeunce_item_1)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    23                                     35365     Count coming in to IF
    23              2                    ***0***     		`uvm_object_utils(seqeunce_item_1)
                                           35365     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              3                    ***0***     		`uvm_object_utils(seqeunce_item_1)
    23              4                    ***0***     		`uvm_object_utils(seqeunce_item_1)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    23                                     35365     Count coming in to IF
    23              5                    ***0***     		`uvm_object_utils(seqeunce_item_1)
                                           35365     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    23                                   ***0***     Count coming in to IF
    23              6                    ***0***     		`uvm_object_utils(seqeunce_item_1)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    70                                      2385     Count coming in to IF
    70              1                        970     			if( VAR_MOSI[10:8]==3'b000 && rst_n )begin
    75              1                       1415     			else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    77                                      2385     Count coming in to IF
    77              1                        811     			if(VAR_MOSI[10:8]===3'b001 && rst_n)begin
                                            1574     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                      2385     Count coming in to IF
    80              1                        335     			if( VAR_MOSI[10:8]==3'b110  && rst_n )begin
    83              1                        269     			else if(VAR_MOSI[10:8]==3'b111  && rst_n) 
                                            1781     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    86                                      2385     Count coming in to IF
    86              1                    ***0***     			if(!rst_n) begin
                                            2385     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12         4         8    33.33%

================================Condition Details================================

Condition Coverage for instance /seqeunce_item --

  File seqeunce_item.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       23 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       23 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       70 Item    1  ((this.VAR_MOSI[10:8] == 0) && this.rst_n)
Condition totals: 1 of 2 input terms covered = 50.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:8] == 0)         Y
                  this.rst_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:8] == 0)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:8] == 0)_1  this.rst_n                    
  Row   3:    ***0***  this.rst_n_0                  (this.VAR_MOSI[10:8] == 0)    
  Row   4:          1  this.rst_n_1                  (this.VAR_MOSI[10:8] == 0)    

----------------Focused Condition View-------------------
Line       77 Item    1  ((this.VAR_MOSI[10:8] === 1) && this.rst_n)
Condition totals: 1 of 2 input terms covered = 50.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:8] === 1)         Y
                   this.rst_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:8] === 1)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:8] === 1)_1  this.rst_n                    
  Row   3:    ***0***  this.rst_n_0                   (this.VAR_MOSI[10:8] === 1)   
  Row   4:          1  this.rst_n_1                   (this.VAR_MOSI[10:8] === 1)   

----------------Focused Condition View-------------------
Line       80 Item    1  ((this.VAR_MOSI[10:8] == 6) && this.rst_n)
Condition totals: 1 of 2 input terms covered = 50.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:8] == 6)         Y
                  this.rst_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:8] == 6)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:8] == 6)_1  this.rst_n                    
  Row   3:    ***0***  this.rst_n_0                  (this.VAR_MOSI[10:8] == 6)    
  Row   4:          1  this.rst_n_1                  (this.VAR_MOSI[10:8] == 6)    

----------------Focused Condition View-------------------
Line       83 Item    1  ((this.VAR_MOSI[10:8] == 7) && this.rst_n)
Condition totals: 1 of 2 input terms covered = 50.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:8] == 7)         Y
                  this.rst_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:8] == 7)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:8] == 7)_1  this.rst_n                    
  Row   3:    ***0***  this.rst_n_0                  (this.VAR_MOSI[10:8] == 7)    
  Row   4:          1  this.rst_n_1                  (this.VAR_MOSI[10:8] == 7)    


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      41        18        23    43.90%

================================Statement Details================================

Statement Coverage for instance /seqeunce_item --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File seqeunce_item.sv
    1                                                package seqeunce_item;
    2                                                	import uvm_pkg::*;
    3                                                	`include "uvm_macros.svh"
    4                                                	typedef enum  {IDLE , CHK_CMD , WRITE , READ_ADD , READ_DATA} states_e;
    5                                                
    6                                                	class seqeunce_item_2 extends uvm_sequence_item;
    7               1                    ***0***     		`uvm_object_utils(seqeunce_item_2)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                		rand logic rst_n;
    9                                                		rand logic SS_n ;
    10                                               
    11                                               		constraint c_2 {
    12                                               		rst_n dist {0:=4 , 1:=96};
    13                                               		SS_n dist {0:=95 , 1:=5};
    14                                               		}
    15                                               
    16                                               
    17                                               		function new(string name = "seqeunce_item_2");
    18              1                          2     			super.new(name);
    19                                               		endfunction 
    20                                               	endclass
    21                                               
    22                                               	class seqeunce_item_1 extends uvm_sequence_item ;
    23              1                    ***0***     		`uvm_object_utils(seqeunce_item_1)
    23              2                    ***0***     
    23              3                    ***0***     
    23              4                    ***0***     
    23              5                    ***0***     
    23              6                      35365     
    23              7                    ***0***     
    23              8                    ***0***     
    23              9                      35365     
    23             10                    ***0***     
    24                                               		
    25                                               		logic rst_n;
    26                                               		logic SS_n ;
    27                                               		logic MOSI;
    28                                               		logic tx_valid;
    29                                               		logic MISO;
    30                                               		logic MISO_ref;
    31                                               		logic rx_valid;
    32                                               		logic [7:0] tx_data;
    33                                               		logic [9:0] rx_data;
    34                                               		rand bit [10:0] VAR_MOSI;
    35              1                      78272     		logic write_address_available=0;
    36              1                      78272     		logic read_address_available=0;
    37                                               		logic [7:0] queue[$];
    38                                               		logic [7:0] last_write_address;
    39              1                      78272     		logic [1:0] last_operation=2'b11;
    40                                               		logic [2:0] cs;
    41                                               		bit write_addr;
    42                                               		bit read_addr;
    43                                               		int i;
    44                                               		/*------------------------------------------------------------------------------
    45                                               		-- CONSTRAINTS
    46                                               		-------------------------------------------------------------------------------*/
    47                                               
    48                                               		constraint MOSI_constrain {
    49                                               			VAR_MOSI[10:8] dist {3'b000:=30,3'b001:=30,3'b110:=20,3'b111:=20} ; //SPI_3
    50                                               
    51                                               		}
    52                                               		constraint reading_from_trusted_places { //SPI_4
    53                                               			if(VAR_MOSI[10:8]==3'b110 && queue.size() != 0){ VAR_MOSI[7:0] inside {queue}; }
    54                                               			else if(queue.size()==0) {VAR_MOSI[10:8] !=3'b110 ; }
    55                                               			
    56                                               		}
    57                                               		
    58                                               		constraint next_instruction_consrtain { //SPI_4
    59                                               			if(!read_address_available){
    60                                               				VAR_MOSI[10:8]!=3'b111;
    61                                               			}
    62                                               			if(read_address_available){
    63                                               				VAR_MOSI[10:8]!=3'b110;
    64                                               			}
    65                                               			if(!write_addr){
    66                                               				VAR_MOSI[10:8]!=3'b001;
    67                                               			}
    68                                               		}
    69                                               		function void succesful_operation();
    70                                               			if( VAR_MOSI[10:8]==3'b000 && rst_n )begin
    71              1                        970     				write_address_available=1;
    72              1                        970     				write_addr=1;
    73              1                        970     				last_write_address=VAR_MOSI[7:0];
    74                                               			end
    75                                               			else 
    76              1                       1415     				write_address_available=0;
    77                                               			if(VAR_MOSI[10:8]===3'b001 && rst_n)begin
    78              1                        811     				queue.push_back(last_write_address);
    79                                               			end
    80                                               			if( VAR_MOSI[10:8]==3'b110  && rst_n )begin
    81              1                        335     				read_address_available=1;
    82                                               			end
    83                                               			else if(VAR_MOSI[10:8]==3'b111  && rst_n) 
    84              1                        269     				read_address_available=0;
    85              1                       2385     			last_operation=VAR_MOSI[9:8];
    86                                               			if(!rst_n) begin
    87              1                    ***0***     				write_addr=0;
    88              1                    ***0***     				read_address_available=0;
    89              1                    ***0***     				last_write_address=0;
    90                                               			end
    91                                               		endfunction : succesful_operation
    92                                               		function void clear_reg();
    93              1                        267     				write_addr=0;
    94              1                        267     				read_address_available=0;
    95              1                        267     				last_write_address=0;
    96                                               		endfunction : clear_reg
    97                                               
    98                                               		/*-------------------------------------------------------------------------------*/
    99                                               
    100                                              		function new(string name = "seqeunce_item");
    101             1                      78272     			super.new(name);
    102                                              		endfunction 
    103                                              
    104                                              		function string convert2string;
    105             1                    ***0***     			return $sformatf("%s reset = %0b , SS_n = %0b , 10 bits MOSI = %0b  ", super.convert2string , rst_n ,
    106                                              				SS_n , VAR_MOSI );
    107                                              		endfunction 
    108                                              
    109                                              		function string convert2string_stimulus ;
    110             1                    ***0***     			return $sformatf("reset = %0b , SS_n = %0b , 10 bits MOSI = %0b  ", rst_n ,


=================================================================================
=== Instance: /scoreboard
=== Design Unit: work.scoreboard
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         4         4    50.00%

================================Branch Details================================

Branch Coverage for instance /scoreboard

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
------------------------------------IF Branch------------------------------------
    37                                     42902     Count coming in to IF
    37              1                    ***0***     			if(seq_item.MISO != seq_item.MISO_ref) begin
    41              1                      42902     			else begin 
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                     42902     Count coming in to IF
    43              1                    ***0***     				`uvm_info("run_phase" , $sformatf("correct out= %0b" , seq_item.convert2string) , UVM_HIGH)
                                           42902     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1     		`uvm_info("report_phase" , $sformatf("total successfull transaction =%0d" , correct_count),UVM_MEDIUM )
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              1                          1     		`uvm_info("report_phase" , $sformatf("total unsuccessfull transaction =%0d" , error_count),UVM_MEDIUM )
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /scoreboard --

  File scoreboard.sv
----------------Focused Condition View-------------------
Line       37 Item    1  (this.seq_item.MISO != this.seq_item.MISO_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                      Input Term   Covered  Reason for no coverage   Hint
                                     -----------  --------  -----------------------  --------------
  (this.seq_item.MISO != this.seq_item.MISO_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                        Non-masking condition(s)      
 ---------  ---------  --------------------                              -------------------------     
  Row   1:          1  (this.seq_item.MISO != this.seq_item.MISO_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item.MISO != this.seq_item.MISO_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        16         4    80.00%

================================Statement Details================================

Statement Coverage for instance /scoreboard --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
    1                                                package scoreboard;
    2                                                
    3                                                import seqeunce_item::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class scoreboard extends uvm_scoreboard;
    8               1                    ***0***     	`uvm_component_utils(scoreboard)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                               	seqeunce_item_1 seq_item;
    11                                               	uvm_analysis_export # (seqeunce_item_1) sb_port;
    12                                               	uvm_tlm_analysis_fifo # (seqeunce_item_1) sb_fifo;
    13                                               	
    14                                               
    15              1                          1     	int error_count = 0;
    16              1                          1     	int correct_count = 0;
    17                                               
    18                                               	function new(string name = "scoreboard" , uvm_component parent = null);
    19              1                          1     		super.new(name,parent);
    20                                               	endfunction 
    21                                               
    22                                               	function void build_phase(uvm_phase phase);
    23              1                          1     		super.build_phase(phase);
    24              1                          1     		sb_port = new("sb_port" , this);
    25              1                          1     		sb_fifo = new("sb_fifo" , this);
    26                                               	endfunction 
    27                                               
    28                                               	function void connect_phase(uvm_phase phase);
    29              1                          1     		super.connect_phase(phase);
    30              1                          1     		sb_port.connect(sb_fifo.analysis_export);
    31                                               	endfunction 
    32                                               
    33                                               	task run_phase(uvm_phase phase);
    34              1                          1     		super.run_phase(phase);
    35              1                          1     		forever begin
    36              1                      42903     			sb_fifo.get(seq_item);
    37                                               			if(seq_item.MISO != seq_item.MISO_ref) begin
    38                                               				//`uvm_error("run_phase" , $sformatf("comparsion failed , Transaction received by the DUT:%S while the refrence out= %0b" , seq_item.convert2string , dataout_ref))
    39              1                    ***0***     				error_count++;
    40                                               			end
    41                                               			else begin 
    42              1                      42902     				correct_count++;
    43              1                    ***0***     				`uvm_info("run_phase" , $sformatf("correct out= %0b" , seq_item.convert2string) , UVM_HIGH)
    44                                               			end 
    45                                               		end 
    46                                               	endtask 
    47                                               
    48                                               
    49                                               	function void report_phase(uvm_phase phase);
    50              1                          1     		super.report_phase(phase);
    51              1                          1     		`uvm_info("report_phase" , $sformatf("total successfull transaction =%0d" , correct_count),UVM_MEDIUM )
    52              1                          1     		`uvm_info("report_phase" , $sformatf("total unsuccessfull transaction =%0d" , error_count),UVM_MEDIUM )


=================================================================================
=== Instance: /coverage
=== Design Unit: work.coverage
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /coverage

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File coverage.sv
------------------------------------IF Branch------------------------------------
    94                                     42902     Count coming in to IF
    94              1                       2519     		if(seq_item.i==11)
                                           40383     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         1         0   100.00%

================================Condition Details================================

Condition Coverage for instance /coverage --

  File coverage.sv
----------------Focused Condition View-------------------
Line       94 Item    1  (this.seq_item.i == 11)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (this.seq_item.i == 11)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (this.seq_item.i == 11)_0  -                             
  Row   2:          1  (this.seq_item.i == 11)_1  -                             



Covergroup Coverage:
    Covergroups                      2        na        na   100.00%
        Coverpoints/Crosses          9        na        na        na
            Covergroup Bins         24        24         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /coverage/coverage/cvr_gp                       100.00%        100          -    Covered              
    covered/total bins:                                    12         12          -                      
    missing/total bins:                                     0         12          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint VAR_MOSI_label                         100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_addr_mosi                              1005          1          -    Covered              
        bin write_data_mosi                               879          1          -    Covered              
        bin read_addr_mosi                                312          1          -    Covered              
        bin read_data_mosi                                278          1          -    Covered              
    Coverpoint rx_valid_label                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_rx_valid                                 385          1          -    Covered              
        bin one_rx_valid                                 2134          1          -    Covered              
    Coverpoint tx_valid_label                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_tx_valid                                2247          1          -    Covered              
        bin one_tx_valid                                  272          1          -    Covered              
    Cross CROSS_VAR_MOSI_WITH_rx_valid                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <read_addr_mosi,one_rx_valid>             300          1          -    Covered              
            bin <write_data_mosi,one_rx_valid>            851          1          -    Covered              
            bin <write_addr_mosi,one_rx_valid>            948          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_zero_of_rx_valid            375                     -    Occurred             
            ignore_bin ignore_read_data                   278                     -    Occurred             
    Cross CROSS_VAR_MOSI_WITH_tx_valid                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <read_data_mosi,one_tx_valid>             272          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_zero_of_tx_valid           2202                     -    Occurred             
            ignore_bin ignore_read_addr                   312                     -    Occurred             
            ignore_bin ignore_write_data                  879                     -    Occurred             
            ignore_bin ignore_write_addr                 1005                     -    Occurred             
 TYPE /coverage/coverage/cvr_gp_2                     100.00%        100          -    Covered              
    covered/total bins:                                    12         12          -                      
    missing/total bins:                                     0         12          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint states_label                           100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_label                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rst_n_label                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint transitions_label                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/coverage::coverage::cvr_gp_2  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    12         12          -                      
    missing/total bins:                                     0         12          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint states_label                           100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        bin idle                                         4498          1          -    Covered              
        bin chk_cmd                                      2969          1          -    Covered              
        bin read_addr                                   24775          1          -    Covered              
        bin read_data                                    4841          1          -    Covered              
        bin write                                        5819          1          -    Covered              
    Coverpoint SS_n_label                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_SS_n                                   38928          1          -    Covered              
        bin one_SS_n                                     3973          1          -    Covered              
    Coverpoint rst_n_label                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_rst_n                                   1069          1          -    Covered              
        bin one_rst_n                                   41833          1          -    Covered              
    Coverpoint transitions_label                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin transition_read_addr                          337          1          -    Covered              
        bin transition_read_data                            4          1          -    Covered              
        bin transition_write                             1807          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16        14         2    87.50%

================================Statement Details================================

Statement Coverage for instance /coverage --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File coverage.sv
    1                                                package coverage;
    2                                                	typedef enum  {IDLE , CHK_CMD , WRITE , READ_ADD , READ_DATA} states_e;
    3                                                import seqeunce_item::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class coverage extends uvm_component;
    8               1                    ***0***     	`uvm_component_utils(coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                               seqeunce_item_1 seq_item;
    11                                               uvm_analysis_export #(seqeunce_item_1) cov_port;
    12                                               uvm_tlm_analysis_fifo #(seqeunce_item_1) cov_fifo;
    13                                               
    14                                               		covergroup cvr_gp;
    15                                               
    16                                               		VAR_MOSI_label:coverpoint seq_item.VAR_MOSI { //SPI_3
    17                                               			wildcard bins write_addr_mosi = {11'b000_????_????};
    18                                               			wildcard bins write_data_mosi = {11'b001_????_????};
    19                                               			wildcard bins read_addr_mosi  = {11'b110_????_????};
    20                                               			wildcard bins read_data_mosi  = {11'b111_????_????};	
    21                                               		}
    22                                               
    23                                               		rx_valid_label:coverpoint seq_item.rx_valid {//SPI_3
    24                                               			bins zero_rx_valid = {0};
    25                                               			bins one_rx_valid  = {1};
    26                                               		}
    27                                               
    28                                               		tx_valid_label:coverpoint seq_item.tx_valid {//SPI_3
    29                                               			bins zero_tx_valid = {0};
    30                                               			bins one_tx_valid  = {1};
    31                                               		}
    32                                               
    33                                               		
    34                                               
    35                                               		CROSS_VAR_MOSI_WITH_rx_valid:cross VAR_MOSI_label , rx_valid_label { //SPI_3
    36                                               			ignore_bins ignore_read_data        = binsof(VAR_MOSI_label.read_data_mosi);
    37                                               			ignore_bins ignore_zero_of_rx_valid = binsof(rx_valid_label.zero_rx_valid);
    38                                               		}
    39                                               		 
    40                                               		CROSS_VAR_MOSI_WITH_tx_valid:cross VAR_MOSI_label , tx_valid_label {  //SPI_3
    41                                               			ignore_bins ignore_write_addr       = binsof(VAR_MOSI_label.write_addr_mosi);
    42                                               			ignore_bins ignore_write_data       = binsof(VAR_MOSI_label.write_data_mosi);
    43                                               			ignore_bins ignore_read_addr        = binsof(VAR_MOSI_label.read_addr_mosi);
    44                                               			ignore_bins ignore_zero_of_tx_valid = binsof(tx_valid_label.zero_tx_valid);
    45                                               		}
    46                                               
    47                                               
    48                                               		endgroup
    49                                               		covergroup cvr_gp_2;
    50                                               			states_label:coverpoint seq_item.cs { //SPI_4
    51                                               				bins idle      = {0};
    52                                               				bins chk_cmd   = {1};
    53                                               				bins read_addr = {2};
    54                                               				bins read_data = {3};
    55                                               				bins write     = {4};
    56                                               			}
    57                                               			SS_n_label:coverpoint seq_item.SS_n {//SPI_2
    58                                               				bins zero_SS_n = {0};
    59                                               				bins one_SS_n  = {1};
    60                                               			}
    61                                               
    62                                               			rst_n_label:coverpoint seq_item.rst_n { //SPI_1
    63                                               				bins zero_rst_n = {0};
    64                                               				bins one_rst_n  = {1};	
    65                                               			}
    66                                               			transitions_label:coverpoint seq_item.cs {//SPI_4
    67                                               				bins transition_read_addr = (IDLE=>CHK_CMD=>READ_ADD[*10:15]=>IDLE);
    68                                               				bins transition_read_data = (IDLE=>CHK_CMD=>READ_DATA[*10:15]=>IDLE);
    69                                               				bins transition_write     = (IDLE=>CHK_CMD=>WRITE[*10:15]=>IDLE);
    70                                               			} 
    71                                               		endgroup : cvr_gp_2
    72                                               
    73                                               function new(string name = "coverage" , uvm_component parent = null);
    74              1                          1     	super.new(name,parent);
    75              1                          1     	cvr_gp = new;
    76              1                          1     	cvr_gp_2 = new;
    77                                               endfunction 
    78                                               
    79                                               function void build_phase(uvm_phase phase);
    80              1                          1     	super.build_phase(phase);
    81              1                          1     	cov_port = new("cov_port" , this);
    82              1                          1     	cov_fifo = new("cov_fifo" , this);
    83                                               endfunction 
    84                                               
    85                                               function void connect_phase(uvm_phase phase);
    86              1                          1     	super.connect_phase(phase); 
    87              1                          1     	cov_port.connect(cov_fifo.analysis_export);
    88                                               endfunction 
    89                                               
    90                                               task run_phase(uvm_phase phase);
    91              1                          1     	super.run_phase(phase);
    92              1                          1     	forever begin
    93              1                      42903     		cov_fifo.get(seq_item);
    94                                               		if(seq_item.i==11)
    95              1                       2519     			cvr_gp.sample();
    96              1                      42902     		cvr_gp_2.sample();


=================================================================================
=== Instance: /config_obj
=== Design Unit: work.config_obj
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /config_obj

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config_object.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     	`uvm_object_utils(config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***     	`uvm_object_utils(config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     	`uvm_object_utils(config_obj)
    7               4                    ***0***     	`uvm_object_utils(config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***     	`uvm_object_utils(config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     	`uvm_object_utils(config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /config_obj --

  File config_object.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /config_obj --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config_object.sv
    1                                                package config_obj;
    2                                                
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class config_obj extends uvm_object;
    7               1                    ***0***     	`uvm_object_utils(config_obj)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                    ***0***     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                	virtual wrapper_interface_tested tested_vif;
    10                                               	virtual wrapper_interface_ref    reference_vif;
    11                                               
    12                                               	function new (string name = "config_obj");
    13              1                          4     		super.new(name);


=================================================================================
=== Instance: /monitor
=== Design Unit: work.monitor
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         7         1    87.50%

================================Branch Details================================

Branch Coverage for instance /monitor

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
------------------------------------IF Branch------------------------------------
    46                                     42902     Count coming in to IF
    46              1                       2969     		if( seq_item.cs == 3'b001 ) begin
    50              1                      30527     		else if(i<=10 ) begin 
    58              1                        590     		else if(VAR_MOSI[10:9]==2'b11&&i==11) begin // this is done to make sure that when we have read data operation tx_valid is equal to 11
                                            8816     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                     30527     Count coming in to IF
    53              1                       1929     				if( i ==11 && VAR_MOSI[10:9]!=2'b11) begin
                                           28598     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                     42902     Count coming in to IF
    65              1                    ***0***     		`uvm_info("run_phase" , seq_item.convert2string() , UVM_HIGH);
                                           42902     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         6         0   100.00%

================================Condition Details================================

Condition Coverage for instance /monitor --

  File monitor.sv
----------------Focused Condition View-------------------
Line       46 Item    1  (this.seq_item.cs == 1)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (this.seq_item.cs == 1)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (this.seq_item.cs == 1)_0  -                             
  Row   2:          1  (this.seq_item.cs == 1)_1  -                             

----------------Focused Condition View-------------------
Line       50 Item    1  (this.i <= 10)
Condition totals: 1 of 1 input term covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  (this.i <= 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.i <= 10)_0      -                             
  Row   2:          1  (this.i <= 10)_1      -                             

----------------Focused Condition View-------------------
Line       53 Item    1  ((this.i == 11) && (this.VAR_MOSI[10:9] != 3))
Condition totals: 2 of 2 input terms covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
              (this.i == 11)         Y
  (this.VAR_MOSI[10:9] != 3)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.i == 11)_0              -                             
  Row   2:          1  (this.i == 11)_1              (this.VAR_MOSI[10:9] != 3)    
  Row   3:          1  (this.VAR_MOSI[10:9] != 3)_0  (this.i == 11)                
  Row   4:          1  (this.VAR_MOSI[10:9] != 3)_1  (this.i == 11)                

----------------Focused Condition View-------------------
Line       58 Item    1  ((this.VAR_MOSI[10:9] == 3) && (this.i == 11))
Condition totals: 2 of 2 input terms covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:9] == 3)         Y
              (this.i == 11)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:9] == 3)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:9] == 3)_1  (this.i == 11)                
  Row   3:          1  (this.i == 11)_0              (this.VAR_MOSI[10:9] == 3)    
  Row   4:          1  (this.i == 11)_1              (this.VAR_MOSI[10:9] == 3)    


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      30        27         3    90.00%

================================Statement Details================================

Statement Coverage for instance /monitor --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
    1                                                package monitor;
    2                                                
    3                                                import seqeunce_item::*;
    4                                                typedef enum  {IDLE , CHK_CMD , WRITE , READ_ADD , READ_DATA} states_e;
    5                                                import uvm_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class monitor extends uvm_monitor;
    9               1                    ***0***     `uvm_component_utils(monitor)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                               // states_e cs_mon;
    12                                               int i;
    13                                               int cs;
    14                                               virtual wrapper_interface_tested test_vif;
    15                                               virtual wrapper_interface_ref    ref_vif;
    16                                               logic [10:0] VAR_MOSI;
    17                                               seqeunce_item_1 seq_item;
    18                                               uvm_analysis_port #(seqeunce_item_1) mon_port;
    19                                               
    20                                               function new(string name = "monitor" , uvm_component parent = null);
    21              1                          1     	super.new(name,parent);
    22                                               endfunction 
    23                                               
    24                                               function void build_phase(uvm_phase phase);
    25              1                          1     	super.build_phase(phase);
    26              1                          1     	mon_port = new("mon_port" , this);
    27                                               endfunction 
    28                                               
    29                                               task run_phase(uvm_phase phase);
    30              1                          1     	super.run_phase(phase);
    31              1                          1     	forever begin
    32              1                      42903     		seq_item = seqeunce_item_1 :: type_id :: create ("seq_item");
    33              1                      42903     		@(negedge test_vif.clk)
    34              1                      42902     		seq_item.rst_n = test_vif.rst_n;
    35              1                      42902     		seq_item.SS_n  = test_vif.SS_n;
    36              1                      42902     		seq_item.MOSI  = test_vif.MOSI;
    37              1                      42902     		seq_item.MISO  = test_vif.MISO;
    38              1                      42902     		seq_item.MISO_ref = ref_vif.MISO_ref;
    39                                               		/*----------------------------------------------------
    40                                               		-- ADD SIGNALS FOR COVERAGE
    41                                               		----------------------------------------------------*/
    42              1                      42902     		seq_item.tx_valid = test_vif.tx_valid;
    43              1                      42902     		seq_item.rx_valid = test_vif.rx_valid;
    44              1                      42902     		seq_item.cs       = test_vif.cs;
    45              1                      42902     		cs=seq_item.cs;
    46                                               		if( seq_item.cs == 3'b001 ) begin
    47              1                       2969     				i=0;
    48              1                       2969     				VAR_MOSI=0;
    49                                               		end
    50                                               		else if(i<=10 ) begin 
    51              1                      30527     				VAR_MOSI[10-i]=test_vif.MOSI;
    52              1                      30527     				i++;
    53                                               				if( i ==11 && VAR_MOSI[10:9]!=2'b11) begin
    54              1                       1929     					seq_item.VAR_MOSI=VAR_MOSI;
    55              1                       1929     					seq_item.i=i;
    56                                               				end
    57                                               		end
    58                                               		else if(VAR_MOSI[10:9]==2'b11&&i==11) begin // this is done to make sure that when we have read data operation tx_valid is equal to 11
    59              1                        590     			seq_item.VAR_MOSI=VAR_MOSI;
    60              1                        590     			seq_item.i=i;
    61              1                        590     			i++;
    62                                               		end			
    63                                               		/*--------------------------------------------------*/
    64              1                      42902     		mon_port.write(seq_item);
    65              1                    ***0***     		`uvm_info("run_phase" , seq_item.convert2string() , UVM_HIGH);


=================================================================================
=== Instance: /Sequencer
=== Design Unit: work.Sequencer
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /Sequencer --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequencer.sv
    1                                                package Sequencer;
    2                                                	import uvm_pkg::*;
    3                                                 `include "uvm_macros.svh"
    4                                                 import seqeunce_item::*;
    5                                                
    6                                                class Sequencer extends uvm_sequencer #(seqeunce_item_1);
    7               1                    ***0***     	`uvm_component_utils(Sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                	function new (string name = "Sequencer" , uvm_component parent = null);
    10              1                          1     		super.new(name,parent);


=================================================================================
=== Instance: /Driver
=== Design Unit: work.Driver
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /Driver

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Driver.sv
------------------------------------IF Branch------------------------------------
    32                                     35365     Count coming in to IF
    32              1                    ***0***     			`uvm_info("run_phase" , seq_item.convert2string_stimulus() , UVM_HIGH)
                                           35365     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /Driver --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Driver.sv
    1                                                package Driver;
    2                                                
    3                                                import seqeunce_item::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class Driver extends uvm_driver #(seqeunce_item_1);
    8               1                    ***0***     	`uvm_component_utils(Driver)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                               	seqeunce_item_1 seq_item;
    11                                               	virtual wrapper_interface_tested test_vif;
    12                                               	virtual wrapper_interface_ref    ref_vif;
    13                                               
    14                                               	function new (string name = "Driver" , uvm_component parent = null);
    15              1                          1     		super.new(name,parent);
    16                                               	endfunction 
    17                                               
    18                                               	task run_phase (uvm_phase phase);
    19              1                          1     		super.run_phase(phase);
    20              1                          1     		forever begin
    21              1                      35366     			seq_item = seqeunce_item_1 :: type_id :: create ("seq_item");
    22              1                      35366     			seq_item_port.get_next_item(seq_item);
    23              1                      35365     			test_vif.rst_n = seq_item.rst_n;
    24              1                      35365     			test_vif.SS_n  = seq_item.SS_n;
    25              1                      35365     			test_vif.MOSI  = seq_item.MOSI;
    26                                               
    27              1                      35365     			ref_vif.rst_n = seq_item.rst_n;
    28              1                      35365     			ref_vif.SS_n  = seq_item.SS_n;
    29              1                      35365     			ref_vif.MOSI  = seq_item.MOSI;
    30              1                      35365     			@(negedge test_vif.clk)
    31              1                      35365     			seq_item_port.item_done();
    32              1                    ***0***     			`uvm_info("run_phase" , seq_item.convert2string_stimulus() , UVM_HIGH)


=================================================================================
=== Instance: /Agent
=== Design Unit: work.Agent
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         2         6    25.00%

================================Branch Details================================

Branch Coverage for instance /Agent

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Agent.sv
------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                    ***0***     	if(!uvm_config_db #(config_obj) :: get (this , "" , "ALL_CAN_TAKE_TEST" , config_obj_test))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***     		`uvm_fatal("build phase" , "failed to build in Agent")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                         1     Count coming in to IF
    42              1                    ***0***     	if(!uvm_config_db #(config_obj) :: get (this , "" , "ALL_CAN_TAKE_REF" , config_obj_ref))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                   ***0***     Count coming in to IF
    43              1                    ***0***     	`uvm_fatal("build phase" , "failed to build in Agent")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        16         4    80.00%

================================Statement Details================================

Statement Coverage for instance /Agent --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File Agent.sv
    1                                                package Agent;
    2                                                
    3                                                import Driver::*;
    4                                                import Sequencer::*;
    5                                                import monitor::*;
    6                                                import config_obj::*;
    7                                                import seqeunce_item::*;
    8                                                
    9                                                
    10                                               
    11                                               import uvm_pkg::*;
    12                                               `include "uvm_macros.svh"
    13                                               
    14                                               class Agent extends uvm_agent;
    15              1                    ***0***     `uvm_component_utils(Agent)
    15              2                    ***0***     
    15              3                          2     
    16                                               
    17                                               
    18                                               Sequencer sqr;
    19                                               Driver driver;
    20                                               monitor mon;
    21                                               config_obj config_obj_test;
    22                                               config_obj config_obj_ref;
    23                                               seqeunce_item_1 seq_item;
    24                                               uvm_analysis_port #(seqeunce_item_1) agent_port;
    25                                               
    26                                               function new(string name = "Agent" , uvm_component parent  = null);
    27              1                          1     	super.new(name,parent);
    28                                               endfunction 
    29                                               
    30                                               function void build_phase(uvm_phase phase);
    31              1                          1     	super.build_phase(phase);
    32              1                          1     	sqr = Sequencer :: type_id :: create ("sqr" , this);
    33              1                          1     	driver = Driver :: type_id :: create ("driver" , this);
    34              1                          1     	mon = monitor :: type_id :: create ("mon" , this);
    35                                               
    36              1                          1     	config_obj_test = config_obj :: type_id :: create ("config_obj_test" , this);
    37              1                          1     	config_obj_ref = config_obj :: type_id :: create ("config_obj_ref" , this);
    38              1                          1     	agent_port = new("agent_port" , this);
    39                                               
    40                                               	if(!uvm_config_db #(config_obj) :: get (this , "" , "ALL_CAN_TAKE_TEST" , config_obj_test))
    41              1                    ***0***     		`uvm_fatal("build phase" , "failed to build in Agent")
    42                                               	if(!uvm_config_db #(config_obj) :: get (this , "" , "ALL_CAN_TAKE_REF" , config_obj_ref))
    43              1                    ***0***     	`uvm_fatal("build phase" , "failed to build in Agent")
    44                                               endfunction 
    45                                               
    46                                               function void connect_phase(uvm_phase phase);
    47              1                          1     	super.connect_phase(phase);
    48                                               
    49              1                          1     	mon.mon_port.connect(agent_port);
    50                                               
    51              1                          1     	driver.test_vif = config_obj_test.tested_vif;
    52              1                          1     	driver.ref_vif  = config_obj_ref.reference_vif;
    53                                               
    54              1                          1     	mon.test_vif = config_obj_test.tested_vif;
    55              1                          1     	mon.ref_vif  = config_obj_ref.reference_vif;
    56                                               
    57              1                          1     	driver.seq_item_port.connect(sqr.seq_item_export);


=================================================================================
=== Instance: /Enviroment
=== Design Unit: work.Enviroment
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /Enviroment --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File enviroment.sv
    1                                                package Enviroment;
    2                                                
    3                                                import Agent::*;
    4                                                import coverage::*;
    5                                                import scoreboard::*;
    6                                                
    7                                                import uvm_pkg::*;
    8                                                
    9                                                `include "uvm_macros.svh"
    10                                               
    11                                               class Enviroment extends uvm_env;
    12              1                    ***0***     	`uvm_component_utils(Enviroment)
    12              2                    ***0***     
    12              3                          2     
    13                                               
    14                                               	Agent ag;
    15                                               	scoreboard sb;
    16                                               	coverage cov;
    17                                               
    18                                               
    19                                               	function new (string name = "Enviroment" , uvm_component parent = null);
    20              1                          1     		super.new(name,parent);
    21                                               	endfunction
    22                                               
    23                                               	function void build_phase (uvm_phase phase);
    24              1                          1     		super.build_phase(phase);
    25              1                          1     		sb  = scoreboard :: type_id :: create ("sb", this);
    26              1                          1     		ag  = Agent      :: type_id :: create ("ag", this);
    27              1                          1     		cov = coverage   :: type_id :: create ("cov",this);
    28                                               	endfunction
    29                                               
    30                                               	function void connect_phase(uvm_phase phase);
    31              1                          1     		super.connect_phase(phase);
    32              1                          1     		ag.agent_port.connect(sb.sb_port);
    33              1                          1     		ag.agent_port.connect(cov.cov_port);


=================================================================================
=== Instance: /Sequence
=== Design Unit: work.Sequence
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/Sequence/main_sequence/body/#ublk#210485509#47/immed__48
                     sequence.sv(48)                    0          1
/Sequence/main_sequence_2/body/#ublk#210485509#96/immed__97
                     sequence.sv(97)                    0          1
/Sequence/main_sequence_2/body/#ublk#210485509#96/#anonblk#210485509#103#4#/#ublk#210485509#103/immed__105
                     sequence.sv(105)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        40        16        24    40.00%

================================Branch Details================================

Branch Coverage for instance /Sequence

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     	`uvm_object_utils(sequence_reset)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               2                    ***0***     	`uvm_object_utils(sequence_reset)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     	`uvm_object_utils(sequence_reset)
    7               4                    ***0***     	`uvm_object_utils(sequence_reset)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          1     Count coming in to IF
    7               5                    ***0***     	`uvm_object_utils(sequence_reset)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     	`uvm_object_utils(sequence_reset)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***     	`uvm_object_utils(main_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              2                    ***0***     	`uvm_object_utils(main_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              3                    ***0***     	`uvm_object_utils(main_sequence)
    28              4                    ***0***     	`uvm_object_utils(main_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              5                    ***0***     	`uvm_object_utils(main_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              6                    ***0***     	`uvm_object_utils(main_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                      2000     Count coming in to IF
    61              1                        237     			if(VAR_MOSI[10:8]==3'b111) begin
    65              1                       1763     			else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                   ***0***     Count coming in to IF
    75              1                    ***0***     	`uvm_object_utils(main_sequence_2)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    75                                         1     Count coming in to IF
    75              2                    ***0***     	`uvm_object_utils(main_sequence_2)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    75                                   ***0***     Count coming in to IF
    75              3                    ***0***     	`uvm_object_utils(main_sequence_2)
    75              4                    ***0***     	`uvm_object_utils(main_sequence_2)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    75                                         1     Count coming in to IF
    75              5                    ***0***     	`uvm_object_utils(main_sequence_2)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    75                                   ***0***     Count coming in to IF
    75              6                    ***0***     	`uvm_object_utils(main_sequence_2)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    110                                     7364     Count coming in to IF
    110             1                        615     				if(!seq_item_2.rst_n || seq_item_2.SS_n) begin
                                            6749     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    114                                     1000     Count coming in to IF
    114             1                        615     			if(!seq_item_2.rst_n || seq_item_2.SS_n) begin
    122             1                        385     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    118                                      615     Count coming in to IF
    118             1                        267     					if(!seq_item_2.rst_n) seq_item.clear_reg();
                                             348     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    125                                      385     Count coming in to IF
    125             1                         32     			if(VAR_MOSI[10:8]==3'b111) begin
    129             1                        353     			else 
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12         6         6    50.00%

================================Condition Details================================

Condition Coverage for instance /Sequence --

  File sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       28 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       28 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       61 Item    1  (this.VAR_MOSI[10:8] == 7)
Condition totals: 1 of 1 input term covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:8] == 7)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:8] == 7)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:8] == 7)_1  -                             

----------------Focused Condition View-------------------
Line       75 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       75 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       110 Item    1  (~this.seq_item_2.rst_n || this.seq_item_2.SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  this.seq_item_2.rst_n         Y
   this.seq_item_2.SS_n         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.seq_item_2.rst_n_0  -                             
  Row   2:          1  this.seq_item_2.rst_n_1  ~this.seq_item_2.SS_n         
  Row   3:          1  this.seq_item_2.SS_n_0   this.seq_item_2.rst_n         
  Row   4:          1  this.seq_item_2.SS_n_1   this.seq_item_2.rst_n         

----------------Focused Condition View-------------------
Line       114 Item    1  (~this.seq_item_2.rst_n || this.seq_item_2.SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  this.seq_item_2.rst_n         Y
   this.seq_item_2.SS_n         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  this.seq_item_2.rst_n_0  -                             
  Row   2:          1  this.seq_item_2.rst_n_1  ~this.seq_item_2.SS_n         
  Row   3:          1  this.seq_item_2.SS_n_0   this.seq_item_2.rst_n         
  Row   4:          1  this.seq_item_2.SS_n_1   this.seq_item_2.rst_n         

----------------Focused Condition View-------------------
Line       125 Item    1  (this.VAR_MOSI[10:8] == 7)
Condition totals: 1 of 1 input term covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (this.VAR_MOSI[10:8] == 7)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (this.VAR_MOSI[10:8] == 7)_0  -                             
  Row   2:          1  (this.VAR_MOSI[10:8] == 7)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      88        64        24    72.72%

================================Statement Details================================

Statement Coverage for instance /Sequence --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.sv
    1                                                package Sequence ;
    2                                                	import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import seqeunce_item::*;
    5                                                
    6                                                class sequence_reset extends uvm_sequence #(seqeunce_item_1);
    7               1                    ***0***     	`uvm_object_utils(sequence_reset)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                          1     
    7              10                    ***0***     
    8                                                
    9                                                	seqeunce_item_1 seq_item;
    10                                               
    11                                               	function new(string name = "sequence_reset");
    12              1                          1     		super.new(name);
    13                                               	endfunction 
    14                                               
    15                                               	task body;
    16              1                          1     		seq_item = seqeunce_item_1 :: type_id :: create ("seq_item");
    17              1                          1     		start_item(seq_item);
    18              1                          1     		seq_item.rst_n = 0;
    19                                               	//	seq_item.rst_n = 1;
    20                                               	//	seq_item.SS_n  = 1;
    21              1                          1     		finish_item(seq_item);
    22                                               	endtask 
    23                                               endclass
    24                                               
    25                                               
    26                                                
    27                                               class main_sequence extends uvm_sequence #(seqeunce_item_1);
    28              1                    ***0***     	`uvm_object_utils(main_sequence)
    28              2                    ***0***     
    28              3                    ***0***     
    28              4                    ***0***     
    28              5                    ***0***     
    28              6                          1     
    28              7                    ***0***     
    28              8                    ***0***     
    28              9                          1     
    28             10                    ***0***     
    29                                               
    30                                               	seqeunce_item_1 seq_item;
    31                                               	seqeunce_item_2 seq_item_2;
    32                                               
    33                                               	bit [10:0] VAR_MOSI;
    34                                               
    35                                               	function new(string name = "main_sequence");
    36              1                          1     		super.new(name);
    37                                               	endfunction 
    38                                               
    39                                               	//////////////////////// TASK FOR ASSIGNING VAR_MOSI IN MOSI /////////////////
    40                                               	//if vary reset =1 then rst and ss_n may chenge during sending bits otherwise they are stable 
    41                                               	//sampling for testing rest is used to set correct timing for coverage so that we test the current state with the new value of rst and ss_n 
    42                                               	//and we can make sure that we tested reset and ss_n from all states.
    43                                               	task body;
    44              1                          1     		seq_item_2 = seqeunce_item_2 :: type_id :: create ("seq_item_2");
    45              1                          1     		seq_item   = seqeunce_item_1 :: type_id :: create ("seq_item");
    46              1                          1     		seq_item.rst_n=1;
    47              1                       2000     		repeat(2000) begin
    48                                               			assert(seq_item.randomize());
    49              1                       2000     			seq_item.succesful_operation();
    50                                               		//	seq_item.post_randomize_user();
    51              1                       2000     			VAR_MOSI=seq_item.VAR_MOSI;
    52              1                       2000     			start_item(seq_item);
    53              1                       2000     			seq_item.SS_n = 0;
    54              1                       2000     			finish_item(seq_item);
    55              1                       2000     			for(int i=10;i>=0;i--) begin
    55              2                      22000     
    56              1                      22000     				start_item(seq_item);
    57                                               				// assert(seq_item_2.randomize);
    58              1                      22000     				seq_item.MOSI=VAR_MOSI[i];
    59              1                      22000     				finish_item(seq_item);
    60                                               			end
    61                                               			if(VAR_MOSI[10:8]==3'b111) begin
    62              1                        237     			for(int i=0;i<10;i++)//to read from mosi
    62              2                       2370     
    63              1                       2370     				#2;
    64                                               			end
    65                                               			else 
    66              1                       1763     				#4; // to give the data to memory .
    67              1                       2000     			start_item(seq_item);
    68              1                       2000     				seq_item.SS_n = 1;
    69              1                       2000     			finish_item(seq_item);
    70                                               		end
    71                                               	endtask
    72                                               endclass
    73                                               
    74                                               class main_sequence_2 extends uvm_sequence #(seqeunce_item_1);
    75              1                    ***0***     	`uvm_object_utils(main_sequence_2)
    75              2                    ***0***     
    75              3                    ***0***     
    75              4                    ***0***     
    75              5                    ***0***     
    75              6                          1     
    75              7                    ***0***     
    75              8                    ***0***     
    75              9                          1     
    75             10                    ***0***     
    76                                               
    77                                               	seqeunce_item_1 seq_item;
    78                                               	seqeunce_item_2 seq_item_2;
    79                                               
    80                                               	bit [10:0] VAR_MOSI;
    81                                               
    82                                               	function new(string name = "main_sequence_2");
    83              1                          1     		super.new(name);
    84                                               	endfunction 
    85                                               
    86                                               	//////////////////////// TASK FOR ASSIGNING VAR_MOSI IN MOSI /////////////////
    87                                               	//if vary reset =1 then rst and ss_n may chenge during sending bits otherwise they are stable 
    88                                               	//sampling for testing rest is used to set correct timing for coverage so that we test the current state with the new value of rst and ss_n 
    89                                               	//and we can make sure that we tested reset and ss_n from all states.
    90                                               
    91                                               
    92                                               	task body;
    93              1                          1     		seq_item_2 = seqeunce_item_2 :: type_id :: create ("seq_item_2");
    94              1                          1     		seq_item   = seqeunce_item_1 :: type_id :: create ("seq_item");
    95              1                          1     		seq_item.rst_n=1;
    96              1                        385     		repeat(1000) begin
    97                                               			assert(seq_item.randomize());
    98                                               		//	seq_item.post_randomize_user();
    99              1                       1000     			VAR_MOSI=seq_item.VAR_MOSI;
    100             1                       1000     			start_item(seq_item);
    101             1                       1000     			seq_item.SS_n = 0;
    102             1                       1000     			finish_item(seq_item);
    103             1                       1000     			for(int i=10;i>=0;i--) begin
    103             2                       6749     
    104             1                       7364     				start_item(seq_item);
    105                                              				assert(seq_item_2.randomize);
    106             1                       7364     				seq_item.MOSI=VAR_MOSI[i];
    107             1                       7364     				seq_item.rst_n=seq_item_2.rst_n;
    108             1                       7364     				seq_item.SS_n=seq_item_2.SS_n;
    109             1                       7364     				finish_item(seq_item);
    110                                              				if(!seq_item_2.rst_n || seq_item_2.SS_n) begin
    111             1                        615     					break ;
    112                                              				end
    113                                              			end
    114                                              			if(!seq_item_2.rst_n || seq_item_2.SS_n) begin
    115             1                        615     					start_item(seq_item);
    116             1                        615     						seq_item.SS_n = 1;
    117             1                        615     					finish_item(seq_item);
    118             1                        267     					if(!seq_item_2.rst_n) seq_item.clear_reg();
    119             1                        615     					#2;
    120             1                        615     					continue ;
    121                                              			end
    122                                              			else begin
    123             1                        385     				seq_item.succesful_operation();
    124                                              			end
    125                                              			if(VAR_MOSI[10:8]==3'b111) begin
    126             1                         32     			for(int i=0;i<10;i++)//to read from mosi
    126             2                        320     
    127             1                        320     				#2;
    128                                              			end
    129                                              			else 
    130             1                        353     				#4; // to give the data to memory .
    131             1                        385     			start_item(seq_item);
    132             1                        385     				seq_item.SS_n = 1;
    133             1                        385     			finish_item(seq_item);


=================================================================================
=== Instance: /Test
=== Design Unit: work.Test
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         8        12    40.00%

================================Branch Details================================

Branch Coverage for instance /Test

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                    ***0***     		if (! uvm_config_db # (virtual wrapper_interface_tested ) :: get(this , "" , "WR_test_if" , config_obj_tested.tested_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    39                                   ***0***     Count coming in to IF
    39              1                    ***0***     		`uvm_error("build_phase" , "Test - Unable to get the virtual interface of the tested wrapper from uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    41                                         1     Count coming in to IF
    41              1                    ***0***     		if (! uvm_config_db # (virtual wrapper_interface_ref )   :: get(this , "" , "WR_ref_if" , config_obj_ref.reference_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              1                    ***0***     		`uvm_error("build_phase" , "Test - Unable to get the virtual interface of the reference wrapper from uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    56                                         1     Count coming in to IF
    56              1                          1     		`uvm_info("run_phase" , "reset Asserted" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                         1     Count coming in to IF
    58              1                          1     		`uvm_info("run_phase" , "reset Deasserted" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1     		`uvm_info("run_phase" , "main_sequence started" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    66                                         1     Count coming in to IF
    66              1                          1     		`uvm_info("run_phase" , "main_sequence ended" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    72                                         1     Count coming in to IF
    72              1                          1     		`uvm_info("run_phase" , "main_sequence_2 started" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    74                                         1     Count coming in to IF
    74              1                          1     		`uvm_info("run_phase" , "main_sequence_2 ended" , UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        23         4    85.18%

================================Statement Details================================

Statement Coverage for instance /Test --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
    1                                                package Test;
    2                                                
    3                                                import Sequence::*;
    4                                                import config_obj::*;
    5                                                import Enviroment::*;
    6                                                import uvm_pkg::*;
    7                                                `include "uvm_macros.svh"
    8                                                
    9                                                class Test extends uvm_test;
    10              1                    ***0***     	`uvm_component_utils(Test)
    10              2                    ***0***     
    10              3                          4     
    11                                               
    12                                               	virtual wrapper_interface_tested test_vif;
    13                                               	virtual wrapper_interface_ref    ref_vif;
    14                                               	Enviroment env;
    15                                               	config_obj config_obj_tested;
    16                                               	config_obj config_obj_ref;
    17                                               	sequence_reset rst_seq;
    18                                               	main_sequence main_seq;
    19                                               	main_sequence_2 main_seq_2;
    20                                               
    21                                               
    22                                               	function new (string name = "Test" , uvm_component parent = null);
    23              1                          1     		super.new(name,parent);
    24                                               	endfunction 
    25                                               
    26                                               	function void build_phase (uvm_phase phase);
    27              1                          1     		super.build_phase(phase);
    28                                               		
    29              1                          1     		config_obj_tested = config_obj :: type_id :: create ("config_obj_tested",this);
    30              1                          1     		config_obj_ref    = config_obj :: type_id :: create ("config_obj_ref"   ,this);
    31                                               
    32              1                          1     		env = Enviroment :: type_id :: create("env",this);
    33              1                          1     		rst_seq = sequence_reset :: type_id :: create ("rst_seq");
    34              1                          1     		main_seq = main_sequence :: type_id :: create ("main_seq");
    35              1                          1     		main_seq_2 = main_sequence_2 :: type_id :: create ("main_seq_2");
    36                                               
    37                                               
    38                                               		if (! uvm_config_db # (virtual wrapper_interface_tested ) :: get(this , "" , "WR_test_if" , config_obj_tested.tested_vif))
    39              1                    ***0***     		`uvm_error("build_phase" , "Test - Unable to get the virtual interface of the tested wrapper from uvm_config_db")
    40                                               
    41                                               		if (! uvm_config_db # (virtual wrapper_interface_ref )   :: get(this , "" , "WR_ref_if" , config_obj_ref.reference_vif))
    42              1                    ***0***     		`uvm_error("build_phase" , "Test - Unable to get the virtual interface of the reference wrapper from uvm_config_db")
    43                                               
    44              1                          1     		uvm_config_db # (config_obj) :: set(this , "*" , "ALL_CAN_TAKE_TEST" , config_obj_tested);
    45              1                          1     		uvm_config_db # (config_obj) :: set(this , "*" , "ALL_CAN_TAKE_REF"  , config_obj_ref);
    46                                               
    47                                               		
    48                                               	endfunction 
    49                                               
    50                                               	task run_phase (uvm_phase phase);
    51              1                          1     		super.run_phase(phase);
    52              1                          1     		phase.raise_objection(this);
    53                                               	/*-------------------------------------------
    54                                               		/////// Reset sequence ///////
    55                                               	---------------------------------------------*/
    56              1                          1     		`uvm_info("run_phase" , "reset Asserted" , UVM_LOW)
    57              1                          1     		rst_seq.start(env.ag.sqr);
    58              1                          1     		`uvm_info("run_phase" , "reset Deasserted" , UVM_LOW)
    59                                               
    60                                               	/*-------------------------------------------
    61                                               		/////// Main sequence ///////
    62                                               	---------------------------------------------*/
    63                                               
    64              1                          1     		`uvm_info("run_phase" , "main_sequence started" , UVM_LOW)
    65              1                          1     		main_seq.start(env.ag.sqr);
    66              1                          1     		`uvm_info("run_phase" , "main_sequence ended" , UVM_LOW)
    67                                               
    68                                               	/*-------------------------------------------
    69                                               		/////// Main sequence 2 ///////
    70                                               	---------------------------------------------*/
    71                                               
    72              1                          1     		`uvm_info("run_phase" , "main_sequence_2 started" , UVM_LOW)
    73              1                          1     		main_seq_2.start(env.ag.sqr);
    74              1                          1     		`uvm_info("run_phase" , "main_sequence_2 ended" , UVM_LOW)
    75                                               		
    76                                               
    77              1                          1     		phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /coverage/coverage/cvr_gp                       100.00%        100          -    Covered              
    covered/total bins:                                    12         12          -                      
    missing/total bins:                                     0         12          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint VAR_MOSI_label                         100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_addr_mosi                              1005          1          -    Covered              
        bin write_data_mosi                               879          1          -    Covered              
        bin read_addr_mosi                                312          1          -    Covered              
        bin read_data_mosi                                278          1          -    Covered              
    Coverpoint rx_valid_label                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_rx_valid                                 385          1          -    Covered              
        bin one_rx_valid                                 2134          1          -    Covered              
    Coverpoint tx_valid_label                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_tx_valid                                2247          1          -    Covered              
        bin one_tx_valid                                  272          1          -    Covered              
    Cross CROSS_VAR_MOSI_WITH_rx_valid                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <read_addr_mosi,one_rx_valid>             300          1          -    Covered              
            bin <write_data_mosi,one_rx_valid>            851          1          -    Covered              
            bin <write_addr_mosi,one_rx_valid>            948          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_zero_of_rx_valid            375                     -    Occurred             
            ignore_bin ignore_read_data                   278                     -    Occurred             
    Cross CROSS_VAR_MOSI_WITH_tx_valid                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <read_data_mosi,one_tx_valid>             272          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ignore_zero_of_tx_valid           2202                     -    Occurred             
            ignore_bin ignore_read_addr                   312                     -    Occurred             
            ignore_bin ignore_write_data                  879                     -    Occurred             
            ignore_bin ignore_write_addr                 1005                     -    Occurred             
 TYPE /coverage/coverage/cvr_gp_2                     100.00%        100          -    Covered              
    covered/total bins:                                    12         12          -                      
    missing/total bins:                                     0         12          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint states_label                           100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_label                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rst_n_label                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint transitions_label                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/coverage::coverage::cvr_gp_2  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    12         12          -                      
    missing/total bins:                                     0         12          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint states_label                           100.00%        100          -    Covered              
        covered/total bins:                                 5          5          -                      
        missing/total bins:                                 0          5          -                      
        % Hit:                                        100.00%        100          -                      
        bin idle                                         4498          1          -    Covered              
        bin chk_cmd                                      2969          1          -    Covered              
        bin read_addr                                   24775          1          -    Covered              
        bin read_data                                    4841          1          -    Covered              
        bin write                                        5819          1          -    Covered              
    Coverpoint SS_n_label                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_SS_n                                   38928          1          -    Covered              
        bin one_SS_n                                     3973          1          -    Covered              
    Coverpoint rst_n_label                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zero_rst_n                                   1069          1          -    Covered              
        bin one_rst_n                                   41833          1          -    Covered              
    Coverpoint transitions_label                      100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin transition_read_addr                          337          1          -    Covered              
        bin transition_read_data                            4          1          -    Covered              
        bin transition_write                             1807          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/WRAPPER_TESTED/s1/checking_rx_data_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(203)
                                                                              1182 Covered   
/top/WRAPPER_TESTED/s1/checking_rx_valid_with_rx_data_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(204)
                                                                              2110 Covered   
/top/WRAPPER_TESTED/s1/checking_tx_valid_with_rx_data_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(205)
                                                                              2689 Covered   
/top/WRAPPER_TESTED/s1/checking_ss_n_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(206)
                                                                              2732 Covered   
/top/WRAPPER_TESTED/s1/tx_valid_still_high_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(207)
                                                                               269 Covered   
/top/WRAPPER_TESTED/s1/tx_data_still_high_label_cover 
                                         slave  Verilog  SVA  spi_slave_tested.sv(208)
                                                                               269 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 6

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/WRAPPER_TESTED/s1/proc_/immed__194
                     spi_slave_tested.sv(194)           0          1
/top/WRAPPER_TESTED/s1/checking_rx_data_label
                     spi_slave_tested.sv(196)           0          1
/top/WRAPPER_TESTED/s1/checking_rx_valid_with_rx_data_label
                     spi_slave_tested.sv(197)           0          1
/top/WRAPPER_TESTED/s1/checking_tx_valid_with_rx_data_label
                     spi_slave_tested.sv(198)           0          1
/top/WRAPPER_TESTED/s1/checking_ss_n_label
                     spi_slave_tested.sv(199)           0          1
/top/WRAPPER_TESTED/s1/tx_valid_still_high_label
                     spi_slave_tested.sv(200)           0          1
/top/WRAPPER_TESTED/s1/tx_data_still_high_label
                     spi_slave_tested.sv(201)           0          1
/Sequence/main_sequence/body/#ublk#210485509#47/immed__48
                     sequence.sv(48)                    0          1
/Sequence/main_sequence_2/body/#ublk#210485509#96/immed__97
                     sequence.sv(97)                    0          1
/Sequence/main_sequence_2/body/#ublk#210485509#96/#anonblk#210485509#103#4#/#ublk#210485509#103/immed__105
                     sequence.sv(105)                   0          1

Total Coverage By Instance (filtered view): 89.89%

